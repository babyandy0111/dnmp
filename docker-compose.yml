version: "3"
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www/:/var/www/html/:rw
      - ./conf/conf.d:/etc/nginx/conf.d/:ro
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./log/:/var/log/dnmp/:rw
    networks:
      - net-php

  php:
    build: "./php/${PHP_VERSION}/"
    container_name: php
    expose:
      - "9000"
    volumes:
      - ./www/:/var/www/html/:rw
      - ./conf/php.ini:/usr/local/etc/php/php.ini:ro
      - ./conf/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/:/var/log/dnmp/:rw
    networks:
      - net-php
      - net-mysql
      - net-redis

  #composer:
  #  container_name: composer
  #  image: composer/composer:php7
  #  working_dir: /var/www/html
  #  command: global require 'laravel/installer'
  #  volumes:
  #    - ./www/:/var/www/html/:rw
  #  networks:
  #    - net-composer

  mysql:
    image: mariadb:10.5.8
    container_name: mysql
    hostname: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./conf/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql/:/var/lib/mysql/:rw
      - ./log/:/var/log/dnmp/:rw
    networks:
      - net-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    links:
        - mysql:mysql
    ports:
        - 8080:80
    environment:
        PMA_HOST: mysql
    networks:
      - net-myadmin
      - net-mysql

  redis:
    image: redis:${REDIS_VERION}
    container_name: redis
    hostname: redis
    networks:
      - net-redis
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - ./elasticsearch/data/:/usr/share/elasticsearch/data/:rw
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    networks:
      - net-elk

  kibana:
    image: kibana:${ELK_VERSION}
    container_name: kibana
    hostname: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    depends_on:
      - elasticsearch
    external_links:
      - elasticsearch:elasticsearch
    networks:
      - net-elk

  logstash:
    image: logstash:${ELK_VERSION}
    container_name: logstash
    hostname: logstash
    ports:
      - "5000:5000"
      - "12201:12201/udp"
      - "9600:9600"
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./log/:/var/log/dnmp/:rw
    command: logstash -f /usr/share/logstash/pipeline/
    external_links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - net-elk

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - net-rabbitmq

  php-redis-admin:
    image: faktiva/php-redis-admin
    container_name: redis-admin
    environment:
        - PHPREDMIN_DATABASE_REDIS_0_HOST=redis
        #admin/admin
    ports:
        - "63791:80"
    networks:
        - net-redis
    depends_on:
        - redis
  mongo:
    image: mongo
    container_name: mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - ./mango/data/db:/data/db
    ports:
        - "27017:27017"
    command: mongod --smallfiles --logpath=/dev/null # --quiet

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    links:
      - mongo:mongo
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
    depends_on:
      - mongo

  node:
    build: "./nodejs"
    container_name: node
    ports:
      - "3000:3000"
    volumes:
      - ./nodejs/app/:/app:rw
    command: bash -c "npm run start"

  springboot:
    build: "./springboot"
    container_name: springboot
    ports:
      - "8888:8888"
    links:
      - mysql:mysql
    volumes:
      - ./springboot/app:/app:rw
      - ~/.m2:/root/.m2:rw
    networks:
      - net-springboot
      - net-mysql

  etcd:
    image: "quay.io/coreos/etcd:v3.4.7"
    entrypoint: /usr/local/bin/etcd
    container_name: etcd
    command:
      - '--name=etcd'
      - '--data-dir=/etcd_data'
      - '--initial-advertise-peer-urls=http://etcd:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd:2379'
    ports:
      - "2379:2379"
    volumes:
      - ./etcd/store/data:/etcd_data
    networks:
      - net-etcd

  etcdm:
    hostname: etcdm
    image: "shiguanghuxian/etcd-manage:1"
    volumes:
      - ./etcd/bin/config/cfg.toml:/app/config/cfg.toml
      - ./etcd/bin/logs:/app/logs
    ports:
      - "10280:10280"
    networks:
      - net-etcd

  andy-rpc:
    image: "dev-user-rpc:v1"
    container_name: dev-user-rpc
    ports:
      - "9999:9999"
    networks:
      - net-etcd
      - net-mysql
      - net-redis

  andy-api:
    image: "dev-user-api:v1"
    container_name: dev-user-api
    ports:
      - "8888:8888"
    networks:
      - net-etcd
      - net-mysql
      - net-redis

networks:
  net-php:
  net-mysql:
  net-redis:
  net-myadmin:
  net-rabbitmq:
  net-springboot:
  net-etcd:
  #net-mongo-express:
  #net-mongo:
  #net-composer:
  net-elk:
    driver: bridge
